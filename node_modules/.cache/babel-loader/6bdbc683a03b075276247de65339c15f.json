{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios'; // custom hook for performing GET request\n\nconst useFetch = (searchMethod, searchValue) => {\n  const getAll = 'http://localhost:8080/api/students';\n  const getById = 'http://localhost:8080/api/students/' + searchValue;\n  let url = null;\n\n  switch (searchMethod) {\n    case 'getById':\n      url = getById;\n      break;\n\n    case 'getAll':\n      url = getAll;\n      break;\n\n    default:\n      url = null;\n  }\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async function () {\n      try {\n        setLoading(true);\n        const response = await axios.get(url);\n\n        if (response.status === 200) {\n          setData(response.data);\n        }\n      } catch (error) {\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    loading,\n    data\n  };\n};\n\nexport function createStudent(student) {\n  return axios.post('http://localhost:8080/api/add/student', student);\n}\nexport function updateStudent(student, studentId) {\n  return axios.put('http://localhost:8080/api/update/student', student);\n}\nexport function deleteStudent(studentId) {\n  return axios.delete('http://localhost:8080/api/delete/student/' + studentId);\n}\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/mgtru/Documents/Work/Cognixia/Code/React/components-project/components-project/src/service/StudentService.jsx"],"names":["React","Component","useState","useEffect","axios","useFetch","searchMethod","searchValue","getAll","getById","url","data","setData","loading","setLoading","fetchData","response","get","status","error","createStudent","student","post","updateStudent","studentId","put","deleteStudent","delete"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,WAAf,KAA+B;AAC9C,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,OAAO,GAAG,wCAAwCF,WAAxD;AACA,MAAIG,GAAG,GAAG,IAAV;;AAEA,UAAOJ,YAAP;AACE,SAAK,SAAL;AAAgBI,MAAAA,GAAG,GAAGD,OAAN;AAChB;;AACA,SAAK,QAAL;AAAeC,MAAAA,GAAG,GAAGF,MAAN;AACf;;AACA;AAASE,MAAAA,GAAG,GAAG,IAAN;AALX;;AAQA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,kBAAiB;AACjC,UAAI;AACFD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUP,GAAV,CAAvB;;AACA,YAAIM,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BN,UAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACD;AACF,OAND,CAME,OAAOQ,KAAP,EAAc;AACd,cAAMA,KAAN;AACD,OARD,SAQU;AACRL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAZD;;AAaAC,IAAAA,SAAS;AACV,GAfQ,EAeN,CAACL,GAAD,CAfM,CAAT;AAgBA,SAAO;AAAEG,IAAAA,OAAF;AAAWF,IAAAA;AAAX,GAAP;AACD,CAhCD;;AAkCA,OAAO,SAASS,aAAT,CAAuBC,OAAvB,EAA+B;AACpC,SAAOjB,KAAK,CAACkB,IAAN,CAAW,uCAAX,EAAoDD,OAApD,CAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBF,OAAvB,EAAgCG,SAAhC,EAA0C;AAC/C,SAAOpB,KAAK,CAACqB,GAAN,CAAU,0CAAV,EAAsDJ,OAAtD,CAAP;AACD;AAED,OAAO,SAASK,aAAT,CAAuBF,SAAvB,EAAiC;AACtC,SAAOpB,KAAK,CAACuB,MAAN,CAAa,8CAA8CH,SAA3D,CAAP;AACD;AAED,eAAenB,QAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// custom hook for performing GET request\r\nconst useFetch = (searchMethod, searchValue) => {\r\n  const getAll = 'http://localhost:8080/api/students';\r\n  const getById = 'http://localhost:8080/api/students/' + searchValue;\r\n  let url = null;\r\n\r\n  switch(searchMethod) {\r\n    case 'getById': url = getById;\r\n    break;\r\n    case 'getAll': url = getAll;\r\n    break;\r\n    default: url = null;\r\n  }\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchData = async function() {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(url);\r\n        if (response.status === 200) {\r\n          setData(response.data);\r\n        }\r\n      } catch (error) {\r\n        throw error;\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n  return { loading, data };\r\n};\r\n\r\nexport function createStudent(student){\r\n  return axios.post('http://localhost:8080/api/add/student', student);\r\n}\r\n\r\nexport function updateStudent(student, studentId){\r\n  return axios.put('http://localhost:8080/api/update/student', student);\r\n}\r\n\r\nexport function deleteStudent(studentId){\r\n  return axios.delete('http://localhost:8080/api/delete/student/' + studentId);\r\n}\r\n\r\nexport default useFetch;\r\n\r\n  \r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}