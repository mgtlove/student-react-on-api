{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgtru\\\\Documents\\\\Work\\\\Cognixia\\\\Code\\\\React\\\\components-project\\\\components-project\\\\src\\\\components\\\\CardLayout.jsx\";\nimport React from \"react\";\nimport Card from './Card';\nimport { useFetch } from '../service/StudentService';\n\nfunction CardLayout(props) {\n  const {\n    loading,\n    data\n  } = useFetch('getAll', null); // var decks = [];\n  // const CardDeck = (props) => {\n  //   console.log(props.students[0]);\n  //   return (<>\n  //     <div className='card-deck'>\n  //       {props && Array.isArray(props) && props.students.map((student, cardCount) => <Card key={student.id} info={student} handleDelete={props.handleDelete} handleUpdate={props.handleUpdate} />)}\n  //     </div>\n  //   </>);\n  // }\n  // const DeckFormatter = () => {\n  //   let subDecks = [];\n  //   let cardCount = 1;\n  //   let deckMax = 4;\n  //   let maxSet = false;\n  //   console.log(data);\n  //   data.map((student) => {\n  //     maxSet = (cardCount % deckMax === 0) ? maxSet = true : maxSet = false;\n  //     if (!maxSet && cardCount !== data.length-1) {\n  //       console.log(student);\n  //       subDecks.push(student)\n  //       cardCount++;\n  //     }\n  //     else {\n  //       console.log('else');\n  //       decks.push(subDecks);\n  //       subDecks = [];\n  //     }\n  //   });\n  //   console.log(cardCount);\n  //   console.log(data.length)\n  //   console.log(subDecks);\n  //   console.log(decks);\n  //   return (\n  //     <>\n  //       {decks.map(students => <CardDeck students={students} />)}\n  //     </>\n  //   );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, \"loading...\"), data && data.length > 1 && data.map(student => /*#__PURE__*/React.createElement(DeckFormatter, {\n    students: student,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 50\n    }\n  })));\n}\n\nexport default CardLayout;","map":{"version":3,"sources":["C:/Users/mgtru/Documents/Work/Cognixia/Code/React/components-project/components-project/src/components/CardLayout.jsx"],"names":["React","Card","useFetch","CardLayout","props","loading","data","length","map","student"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBJ,QAAQ,CAAC,QAAD,EAAW,IAAX,CAAlC,CADyB,CAEzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGC,IAAI,IACHA,IAAI,CAACC,MAAL,GAAc,CADf,IACoBD,IAAI,CAACE,GAAL,CAAUC,OAAD,iBAAa,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAIA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAHvB,CADF;AAUD;;AAED,eAAeN,UAAf","sourcesContent":["import React from \"react\";\r\nimport Card from './Card';\r\nimport { useFetch } from '../service/StudentService';\r\n\r\nfunction CardLayout(props) {\r\n  const { loading, data } = useFetch('getAll', null);\r\n  // var decks = [];\r\n\r\n  // const CardDeck = (props) => {\r\n  //   console.log(props.students[0]);\r\n  //   return (<>\r\n  //     <div className='card-deck'>\r\n  //       {props && Array.isArray(props) && props.students.map((student, cardCount) => <Card key={student.id} info={student} handleDelete={props.handleDelete} handleUpdate={props.handleUpdate} />)}\r\n  //     </div>\r\n  //   </>);\r\n  // }\r\n\r\n  // const DeckFormatter = () => {\r\n  //   let subDecks = [];\r\n  //   let cardCount = 1;\r\n  //   let deckMax = 4;\r\n  //   let maxSet = false;\r\n  //   console.log(data);\r\n    \r\n  //   data.map((student) => {\r\n  //     maxSet = (cardCount % deckMax === 0) ? maxSet = true : maxSet = false;\r\n  //     if (!maxSet && cardCount !== data.length-1) {\r\n  //       console.log(student);\r\n  //       subDecks.push(student)\r\n  //       cardCount++;\r\n  //     }\r\n  //     else {\r\n  //       console.log('else');\r\n  //       decks.push(subDecks);\r\n  //       subDecks = [];\r\n  //     }\r\n  //   });\r\n\r\n  //   console.log(cardCount);\r\n  //   console.log(data.length)\r\n  //   console.log(subDecks);\r\n  //   console.log(decks);\r\n  //   return (\r\n  //     <>\r\n  //       {decks.map(students => <CardDeck students={students} />)}\r\n  //     </>\r\n  //   );\r\n\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {loading && <p>loading...</p>}\r\n      {data &&\r\n        data.length > 1 && data.map((student) => <DeckFormatter students = {student}/>)\r\n      }\r\n      {/* <Card key={student.id} info={student} handleDelete={props.handleDelete} handleUpdate={props.handleUpdate} /> */}\r\n      {/* {data && data.length > 0 && <Card info = {data.id} /> } */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardLayout;"]},"metadata":{},"sourceType":"module"}