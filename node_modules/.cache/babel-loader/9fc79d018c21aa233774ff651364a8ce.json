{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgtru\\\\Documents\\\\Work\\\\Cognixia\\\\Code\\\\React\\\\components-project\\\\components-project\\\\src\\\\components_example\\\\FuncCardSet.jsx\";\nimport React from \"react\";\nimport useFetch from \"../service/StudentService\";\n\nfunction FuncCardSet(props) {\n  const {\n    loading,\n    data\n  } = useFetch('getAll', 'null');\n  console.log(data);\n  console.log(loading); // function Header(props) {\n  //     return (\n  //         <div className=\"card-header\">\n  //             {props.title}\n  //         </div>\n  //     );\n  // }\n  // function Body(props) (\n  //         <div className=\"card-body\">\n  //             <img src={props.url} alt={props.imgAlt} />\n  //             <div className=\"container\">\n  //                 <p>Name: {props.name}</p>\n  //                 <p>Series: {props.series}</p>\n  //             </div>\n  //         </div>\n  //     )\n  // function Footer(props) {\n  //     return(\n  //         <div className=\"card-footer\">\n  //             {props.details}\n  //         </div>\n  //     );\n  // }\n  // render() {\n  //     return (\n  //         <div className=\"card\">\n  //             <Header title=\"Character Card\" />\n  //             <Body url={this.props.url} imgAlt={this.props.imgAlt} name={this.props.name} series={this.props.series}/>\n  //             <Footer details={this.props.details} />\n  //             <Footer/>\n  //         </div>\n  //     );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"loading...\"), data && data.length > 0 && data.map(student => /*#__PURE__*/React.createElement(\"p\", {\n    key: student.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  }, student.firstName)));\n}\n\nexport default FuncCardSet; //   const Loading = () => <p>Loading</p>;\n//   const Error = error => <p>Oops! Something went wrong: {error}</p>\n//   const List = ({ items, renderItem }) => (\n//     <ul>\n//       {items.map(item => <li key={item.id}>{renderItem(item)}</li>)}\n//     </ul>\n//   );\n//   const DataList = () => {\n//     const { loading, error, data } = useFetch(\"/mock-data\");\n//     return (\n//       <>\n//        { loading && <Loading /> }\n//        { error && <Error error={error} />}\n//        { data.length && <List items={data} renderItem={item => item.label} /> }\n//       </>\n//     );\n//   };","map":{"version":3,"sources":["C:/Users/mgtru/Documents/Work/Cognixia/Code/React/components-project/components-project/src/components_example/FuncCardSet.jsx"],"names":["React","useFetch","FuncCardSet","props","loading","data","console","log","length","map","student","id","firstName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,QAAR,MAAsB,2BAAtB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBJ,QAAQ,CAAC,QAAD,EAAU,MAAV,CAAlC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAHwB,CAKxB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGC,IAAI,IACHA,IAAI,CAACG,MAAL,GAAc,CADf,IAECH,IAAI,CAACI,GAAL,CAASC,OAAO,iBAAI;AAAG,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,OAAO,CAACE,SAA7B,CAApB,CAJJ,CADF;AAQD;;AAED,eAAeV,WAAf,C,CAEF;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport  useFetch from \"../service/StudentService\"; \r\n\r\nfunction FuncCardSet(props) {\r\n    const { loading, data } = useFetch('getAll','null');\r\n    console.log(data);\r\n    console.log(loading);\r\n\r\n    // function Header(props) {\r\n    //     return (\r\n    //         <div className=\"card-header\">\r\n    //             {props.title}\r\n    //         </div>\r\n    //     );\r\n    // }\r\n\r\n    // function Body(props) (\r\n    //         <div className=\"card-body\">\r\n    //             <img src={props.url} alt={props.imgAlt} />\r\n    //             <div className=\"container\">\r\n    //                 <p>Name: {props.name}</p>\r\n    //                 <p>Series: {props.series}</p>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n\r\n    // function Footer(props) {\r\n    //     return(\r\n    //         <div className=\"card-footer\">\r\n    //             {props.details}\r\n    //         </div>\r\n    //     );\r\n    // }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div className=\"card\">\r\n    //             <Header title=\"Character Card\" />\r\n    //             <Body url={this.props.url} imgAlt={this.props.imgAlt} name={this.props.name} series={this.props.series}/>\r\n    //             <Footer details={this.props.details} />\r\n    //             <Footer/>\r\n    //         </div>\r\n\r\n    //     );\r\n    // }\r\n  \r\n    return (\r\n      <div>\r\n        {loading && <p>loading...</p>}\r\n        {data &&\r\n          data.length > 0 &&\r\n          data.map(student => <p key={student.id}>{student.firstName}</p>)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default FuncCardSet;\r\n\r\n//   const Loading = () => <p>Loading</p>;\r\n  \r\n//   const Error = error => <p>Oops! Something went wrong: {error}</p>\r\n  \r\n//   const List = ({ items, renderItem }) => (\r\n//     <ul>\r\n//       {items.map(item => <li key={item.id}>{renderItem(item)}</li>)}\r\n//     </ul>\r\n//   );\r\n                \r\n//   const DataList = () => {\r\n//     const { loading, error, data } = useFetch(\"/mock-data\");\r\n  \r\n//     return (\r\n//       <>\r\n//        { loading && <Loading /> }\r\n//        { error && <Error error={error} />}\r\n//        { data.length && <List items={data} renderItem={item => item.label} /> }\r\n//       </>\r\n//     );\r\n//   };"]},"metadata":{},"sourceType":"module"}