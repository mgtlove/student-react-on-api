{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mgtru\\\\Documents\\\\Work\\\\Cognixia\\\\Code\\\\React\\\\components-project\\\\components-project\\\\src\\\\components\\\\CardInterface.jsx\";\nimport React from \"react\";\nimport { deleteStudent, useFetch } from '../service/StudentService';\nimport { useState, useEffect } from 'react';\nimport CardLayout from \"./CardLayout\";\nimport ModalController from \"./ModalController\"; // Card Interface Contains All Card Rendering, Grouping, Functions, and Modals\n\nfunction CardInterface(props) {\n  // const [modalPurpose, setModalPurpose] = useState({});\n  // const [modalId, setModalId] = useState(null);\n  // useEffect(() => {\n  //   setModalPurpose(handleUpdate.purpose);\n  //   setModalId(handleUpdate.id);\n  // },[]);\n  let modalPurpose = null;\n  let modalId = null;\n\n  const handleDelete = id => {\n    let ok = window.confirm('Are you sure you wish to delete this student?\\nPress \"Ok\" to confirm');\n\n    if (ok === true) {\n      var removeCard = document.getElementById('card' + id);\n      removeCard.parentNode.removeChild(removeCard);\n      deleteStudent(id);\n      window.alert('Student has been deleted');\n    }\n  };\n\n  const handleUpdate = id => {\n    let purpose = 'update';\n    return {\n      purpose,\n      id\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardLayout, {\n    handleUpdate: handleUpdate,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalController, {\n    modalPurpose: modalPurpose,\n    modalId: modalId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CardInterface;","map":{"version":3,"sources":["C:/Users/mgtru/Documents/Work/Cognixia/Code/React/components-project/components-project/src/components/CardInterface.jsx"],"names":["React","deleteStudent","useFetch","useState","useEffect","CardLayout","ModalController","CardInterface","props","modalPurpose","modalId","handleDelete","id","ok","window","confirm","removeCard","document","getElementById","parentNode","removeChild","alert","handleUpdate","purpose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,2BAAxC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,OAAO,GAAG,IAAd;;AAEA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3B,QAAIC,EAAE,GAAGC,MAAM,CAACC,OAAP,CAAe,sEAAf,CAAT;;AACA,QAAIF,EAAE,KAAK,IAAX,EAAiB;AACf,UAAIG,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAASN,EAAjC,CAAjB;AACAI,MAAAA,UAAU,CAACG,UAAX,CAAsBC,WAAtB,CAAkCJ,UAAlC;AACAf,MAAAA,aAAa,CAACW,EAAD,CAAb;AACAE,MAAAA,MAAM,CAACO,KAAP,CAAa,0BAAb;AACD;AACF,GARD;;AAUA,QAAMC,YAAY,GAAIV,EAAD,IAAQ;AAC3B,QAAIW,OAAO,GAAG,QAAd;AACA,WAAO;AAACA,MAAAA,OAAD;AAAUX,MAAAA;AAAV,KAAP;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAEU,YAA1B;AAAwC,IAAA,YAAY,EAAEX,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,YAAY,EAAEF,YAA/B;AAA6C,IAAA,OAAO,EAAEC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeH,aAAf","sourcesContent":["import React from \"react\";\r\nimport { deleteStudent, useFetch } from '../service/StudentService';\r\nimport { useState, useEffect } from 'react';\r\nimport CardLayout from \"./CardLayout\";\r\nimport ModalController from \"./ModalController\";\r\n\r\n// Card Interface Contains All Card Rendering, Grouping, Functions, and Modals\r\nfunction CardInterface(props) {\r\n  // const [modalPurpose, setModalPurpose] = useState({});\r\n  // const [modalId, setModalId] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   setModalPurpose(handleUpdate.purpose);\r\n  //   setModalId(handleUpdate.id);\r\n  // },[]);\r\n\r\n  let modalPurpose = null;\r\n  let modalId = null;\r\n\r\n  const handleDelete = (id) => {\r\n    let ok = window.confirm('Are you sure you wish to delete this student?\\nPress \"Ok\" to confirm');\r\n    if (ok === true) {\r\n      var removeCard = document.getElementById('card' + id);\r\n      removeCard.parentNode.removeChild(removeCard);\r\n      deleteStudent(id);\r\n      window.alert('Student has been deleted');\r\n    }\r\n  }\r\n\r\n  const handleUpdate = (id) => {\r\n    let purpose = 'update';\r\n    return {purpose, id};\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardLayout handleUpdate={handleUpdate} handleDelete={handleDelete} />\r\n      <ModalController modalPurpose={modalPurpose} modalId={modalId} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardInterface;"]},"metadata":{},"sourceType":"module"}